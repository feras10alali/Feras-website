import type { BuiltInProviderType, RedirectableProviderType } from "@auth/core/providers";
import type { LiteralUnion } from "./types.js";
export interface SignInOptions extends Record<string, unknown> {
    /**
     * Specify to which URL the user will be redirected after signing in. Defaults to the page URL the sign-in is initiated from.
     *
     * [Documentation](https://next-auth.js.org/getting-started/client#specifying-a-callbackurl)
     */
    callbackUrl?: string;
    /** [Documentation](https://next-auth.js.org/getting-started/client#using-the-redirect-false-option) */
    redirect?: boolean;
}
interface SignOutParams<R extends boolean = true> {
    /** [Documentation](https://next-auth.js.org/getting-started/client#specifying-a-callbackurl-1) */
    callbackUrl?: string;
    /** [Documentation](https://next-auth.js.org/getting-started/client#using-the-redirect-false-option-1 */
    redirect?: R;
}
/** Match `inputType` of `new URLSearchParams(inputType)` */
export type SignInAuthorizationParams = string | string[][] | Record<string, string> | URLSearchParams;
/**
 * Client-side method to initiate a signin flow
 * or send the user to the signin page listing all possible providers.
 *
 * [Documentation](https://authjs.dev/reference/sveltekit/client#signin)
 */
export declare function signIn<P extends RedirectableProviderType | undefined = undefined>(providerId?: LiteralUnion<P extends RedirectableProviderType ? P | BuiltInProviderType : BuiltInProviderType>, options?: SignInOptions, authorizationParams?: SignInAuthorizationParams): Promise<Response | undefined>;
/**
 * Signs the user out, by removing the session cookie.
 *
 * [Documentation](https://authjs.dev/reference/sveltekit/client#signout)
 */
export declare function signOut(options?: SignOutParams): Promise<void>;
export {};
//# sourceMappingURL=client.d.ts.map